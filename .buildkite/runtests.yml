steps:
  - label: ":julia: [CUDA] Run tests on Julia v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1"
          - "1.9-nightly"
    env:
      GROUP: CUDA
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
    commands:
      - |
        julia --project=test -e '
          import Pkg
          Pkg.add(; name = "CUDA")
          Pkg.add(; name = "CUDAKernels")'
        julia --project -e '
          import Pkg
          println("+++ :julia: Running tests")
          Pkg.test(; coverage=false)'
    agents:
      queue: "juliagpu"
      cuda: "*"
    timeout_in_minutes: 120
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

  - label: ":julia: [AMDGPU] Run tests on Julia v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1"
          - "1.9-nightly"
    env:
      GROUP: AMDGPU
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
    commands:
      - |
        julia --project=test -e '
          import Pkg
          Pkg.add(; name = "AMDGPU")
          Pkg.add(; name = "ROCKernels")'
        julia --project -e '
          import Pkg
          println("+++ :julia: Running tests")
          Pkg.test(; coverage=false)'
    agents:
      queue: "juliagpu"
      rocm: "*"
    timeout_in_minutes: 120
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

  - label: ":julia: [oneAPI] Run tests on Julia v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1"
          - "1.9-nightly"
    env:
      GROUP: oneAPI
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
    commands:
      - |
        julia --project=test -e '
          import Pkg
          Pkg.add(; name = "oneAPI")
          Pkg.add(; name = "oneAPIKernels")'
        julia --project -e '
          import Pkg
          println("+++ :julia: Running tests")
          Pkg.test(; coverage=false)'
    agents:
      queue: "juliagpu"
      intel: "*"
    timeout_in_minutes: 120
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

  - label: ":julia: [Metal] Run tests on Julia v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1"
          - "1.9-nightly"
    env:
      GROUP: Metal
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
    commands:
      - |
        julia --project=test -e '
          import Pkg
          Pkg.add(; name = "Metal")
          Pkg.add(; url = "https://github.com/tgymnich/KernelAbstractions.jl",
                    rev = "metal", subdir = "lib/MetalKernels")'
        julia --project -e '
          import Pkg
          println("+++ :julia: Running tests")
          Pkg.test(; coverage=false)'
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "aarch64"
    timeout_in_minutes: 120
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

env:
  JULIA_PKG_SERVER: "" # it often struggles with our large artifacts
  # SECRET_CODECOV_TOKEN: "..."
